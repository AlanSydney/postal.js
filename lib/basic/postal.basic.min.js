/**
 * postal - Pub/Sub library providing wildcard subscriptions, complex message handling, etc.  Works server and client-side.
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.9.0
 * Url: http://github.com/postaljs/postal.js
 * License(s): MIT, GPL
 */
(function(t,n){"object"==typeof module&&module.exports?module.exports=n(require("underscore"),this):"function"==typeof define&&define.amd?define(["underscore"],function(i){return n(i,t)}):t.postal=n(t._,t)})(this,function(t,n){function i(){for(;g.length;)a.unsubscribe(g.shift())}function e(t,n){return{channel:a.configuration.SYSTEM_CHANNEL,topic:"subscription."+t,data:{event:"subscription."+t,channel:n.channel,topic:n.topic}}}function c(n){return"function"==typeof n?n:n?function(i){var e=0,c=0;return t.each(n,function(t,s){e+=1,("topic"===s&&a.configuration.resolver.compare(i.topic,n.topic)||"context"===s&&n.context===(i.callback.context&&i.callback.context()||i.context)||i[s]===n[s])&&(c+=1)}),e===c}:function(){return!0}}function s(t){var n,i=new p(t.channel||this.configuration.DEFAULT_CHANNEL,t.topic,t.callback),e=this.subscriptions[i.channel];return e||(e=this.subscriptions[i.channel]={}),n=this.subscriptions[i.channel][i.topic],n||(n=this.subscriptions[i.channel][i.topic]=[]),n.push(i),i}function o(n){++b,n.channel=n.channel||this.configuration.DEFAULT_CHANNEL,n.timeStamp=new Date,t.each(this.wireTaps,function(t){t(n.data,n)}),this.subscriptions[n.channel]&&t.each(this.subscriptions[n.channel],function(t){for(var i,e=0,c=t.length;c>e;)(i=t[e++])&&f(i,n)}),0===--b&&i()}function r(){for(var t,n=0,i=Array.prototype.slice.call(arguments,0);t=i.shift();){if(b)return void g.push(t);if(this.subscriptions[t.channel]&&this.subscriptions[t.channel][t.topic]){var c=this.subscriptions[t.channel][t.topic].length;for(n=0;c>n;){if(this.subscriptions[t.channel][t.topic][n]===t){this.subscriptions[t.channel][t.topic].splice(n,1);break}n+=1}}a.publish(e("removed",t))}}var a,u=n.postal,h=function(t){this.channel=t||a.configuration.DEFAULT_CHANNEL,this.initialize()};h.prototype.initialize=function(){},h.prototype.subscribe=function(){return a.subscribe({channel:this.channel,topic:1===arguments.length?arguments[0].topic:arguments[0],callback:1===arguments.length?arguments[0].callback:arguments[1]})},h.prototype.publish=function(){var t=1===arguments.length?"[object String]"===Object.prototype.toString.call(arguments[0])?{topic:arguments[0]}:arguments[0]:{topic:arguments[0],data:arguments[1]};t.channel=this.channel,a.publish(t)};var p=function(t,n,i){if(3!==arguments.length)throw new Error("You must provide a channel, topic and callback when creating a SubscriptionDefinition instance.");if(0===n.length)throw new Error("Topics cannot be empty");this.channel=t,this.topic=n,this.subscribe(i)};p.prototype={unsubscribe:function(){this.inactive||(this.inactive=!0,a.unsubscribe(this))},subscribe:function(t){return this.callback=t,this},withContext:function(t){return this.context=t,this}};var l={cache:{},regex:{},compare:function(n,i){var e,c,s,o=this.cache[i]&&this.cache[i][n];return"undefined"!=typeof o?o:((c=this.regex[n])||(e="^"+t.map(n.split("."),function(t){var n="";return s&&(n="#"!==s?"\\.\\b":"\\b"),n+="#"===t?"[\\s\\S]*":"*"===t?"[^.]+":t,s=t,n}).join("")+"$",c=this.regex[n]=new RegExp(e)),this.cache[i]=this.cache[i]||{},this.cache[i][n]=o=c.test(i),o)},reset:function(){this.cache={},this.regex={}}},f=function(t,n){!t.inactive&&a.configuration.resolver.compare(t.topic,n.topic)&&t.callback.call(t.context||this,n.data,n)},b=0,g=[];if(a={configuration:{resolver:l,DEFAULT_CHANNEL:"/",SYSTEM_CHANNEL:"postal"},subscriptions:{},wireTaps:[],ChannelDefinition:h,SubscriptionDefinition:p,channel:function(t){return new h(t)},addWireTap:function(t){var n=this;return n.wireTaps.push(t),function(){var i=n.wireTaps.indexOf(t);-1!==i&&n.wireTaps.splice(i,1)}},noConflict:function(){if("undefined"==typeof window||"undefined"!=typeof window&&"function"==typeof define&&define.amd)throw new Error("noConflict can only be used in browser clients which aren't using AMD modules");return n.postal=u,this},getSubscribersFor:function(n){var i=[];return t.each(this.subscriptions,function(e){t.each(e,function(e){i=i.concat(t.filter(e,c(n)))})}),i},reset:function(){this.unsubscribeFor(),this.configuration.resolver.reset(),this.subscriptions={}},unsubscribeFor:function(t){var n=[];this.subscriptions&&(n=this.getSubscribersFor(t),this.unsubscribe.apply(this,n))}},a.subscribe=new Conduit.Sync({target:s,context:a}),a.publish=Conduit.Async({target:o,context:a}),a.unsubscribe=new Conduit.Sync({target:r,context:a}),a.subscribe.after(function(t){a.publish(e("created",t))}),a.subscriptions[a.configuration.SYSTEM_CHANNEL]={},n&&Object.prototype.hasOwnProperty.call(n,"__postalReady__")&&t.isArray(n.__postalReady__))for(;n.__postalReady__.length;)n.__postalReady__.shift().onReady(a);return a});